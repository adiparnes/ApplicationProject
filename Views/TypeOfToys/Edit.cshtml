@model GreenToys.Models.TypeOfToy

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit type of toy</h4>
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        <div class="form-border">
            @Html.HiddenFor(model => model.TypeOfToyID)


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <!--lembda to adding classes occupaid 2 col-->
                @Html.LabelFor(m => m.ToyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ToyDescription, htmlAttributes: new { @class = "form-control", style = "height:250px;" })

                    @Html.ValidationMessageFor(model => model.ToyDescription, "", new { @class = "text-danger" })
                    <!--validations for name-->
                    <!--text-danger : make sure it apears in red-->
                </div>
            </div>
        </div>
    </div>
    <br />
    <div>
        @Html.Partial("_BackToListButtonPartial")
        <input type="submit" value="Save" class="btn btn-sm btn-success" /><!--type-submit class-btn btn-default-->
    </div>
}



@*<div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-sm btn-success" />
        </div>
    </div>*@


@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
